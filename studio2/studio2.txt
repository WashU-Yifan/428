1. Yifan Wang 488500 wang.y1

2.
correct command line argument:
    [wang.y1@shell studio2]$ ./studio2  + 2 3
    The value calculated is 5
    [wang.y1@shell studio2]$ echo $?
    0
    [wang.y1@shell studio2]$ 

incorrect command line arguments:
    [wang.y1@shell studio2]$ ./studio2 1 + 2
    The value calculated is 1
    [wang.y1@shell studio2]$ echo $?
    0

3.
    [wang.y1@shell studio2]$ gdb studio2
    GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-120.el7
    Copyright (C) 2013 Free Software Foundation, Inc.
    License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
    This is free software: you are free to change and redistribute it.
    There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
    and "show warranty" for details.
    This GDB was configured as "x86_64-redhat-linux-gnu".
    For bug reporting instructions, please see:
    <http://www.gnu.org/software/gdb/bugs/>...
    Reading symbols from /home/warehouse/wang.y1/cse428_fall22/studio2/studio2...done.
    (gdb) 

4.
    (gdb) break parse_and_compute
    Breakpoint 1 at 0x401b6d: file studio2.cpp, line 93.

5.
    (gdb) run  + + + + 2 3 3 3 3 
    Starting program: /home/warehouse/wang.y1/cse428_fall22/studio2/studio2 + + + + 2 3 3 3 3
    warning: File "/project/engineering/compilers/gcc-8.3.0/lib64/libstdc++.so.6.0.25-gdb.py" auto-loading has been declined by your `auto-load safe-path' set to "$debugdir:$datadir/auto-load:/usr/bin/mono-gdb.py".

    Breakpoint 1, parse_and_compute (current_index=@0x7fffffffd844: 1, 
        last_index=9, argv=0x7fffffffd958) at studio2.cpp:93
    93	  if (current_index > last_index) {        
    (gdb) continue
    Continuing.

    Breakpoint 1, parse_and_compute (current_index=@0x7fffffffd844: 2, 
        last_index=9, argv=0x7fffffffd958) at studio2.cpp:93
    93	  if (current_index > last_index) {        
    (gdb) 
6.
    (gdb) where
    #0  parse_and_compute (current_index=@0x7fffffffd844: 2, last_index=9, 
        argv=0x7fffffffd958) at studio2.cpp:93
    #1  0x0000000000401c2c in parse_and_compute (current_index=@0x7fffffffd844: 2, 
        last_index=9, argv=0x7fffffffd958) at studio2.cpp:103
    #2  0x00000000004019d0 in main (argc=10, argv=0x7fffffffd958) at studio2.cpp:46
    (gdb) 

7. 

    The command line arguments' index is starting at 1 and ending at 9
    For now the current_index should be 2 since it's the second parse_and_compute
    function call. The corresponding C string would be "+"

    (gdb) print current_index
    $7 = (int &) @0x7fffffffd844: 2
    (gdb) print argv[current_index]
    $8 = 0x7fffffffdd81 "+"